"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.logger = exports.createLogger = exports.Logger = exports.LogLevel = void 0;
var LogLevel;
(function (LogLevel) {
    LogLevel["DEBUG"] = "debug";
    LogLevel["LOG"] = "log";
    LogLevel["INFO"] = "info";
    LogLevel["WARN"] = "warn";
    LogLevel["ERROR"] = "error";
    LogLevel["OFF"] = "off";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
class Logger {
    logger;
    level;
    constructor(logger = console, level = LogLevel.INFO) {
        this.logger = logger;
        this.level = level;
    }
    static isSupportedLogLevel(value) {
        return (typeof value === 'string' &&
            (value === 'debug' ||
                value === 'log' ||
                value === 'info' ||
                value === 'warn' ||
                value === 'error' ||
                value === 'off'));
    }
    setLogLevel(level) {
        this.level = level;
    }
    isDebugEnabled() {
        return this.level <= LogLevel.DEBUG;
    }
    debug(message, ...optionalParams) {
        this.message(LogLevel.DEBUG, message, ...optionalParams);
    }
    log(message, ...optionalParams) {
        this.message(LogLevel.LOG, message, ...optionalParams);
    }
    info(message, ...optionalParams) {
        this.message(LogLevel.INFO, message, ...optionalParams);
    }
    warn(message, ...optionalParams) {
        this.message(LogLevel.WARN, message, ...optionalParams);
    }
    error(message, ...optionalParams) {
        this.message(LogLevel.ERROR, message, ...optionalParams);
    }
    message(level, message, ...optionalParams) {
        if (this.level !== LogLevel.OFF && this.level <= level) {
            if (level !== LogLevel.OFF) {
                this.logger[level](message, ...optionalParams);
            }
        }
    }
}
exports.Logger = Logger;
function createLogger(logger = console) {
    return new Logger(logger);
}
exports.createLogger = createLogger;
exports.logger = createLogger(console);
if (process.env.NODE_ENV === 'test') {
    exports.logger.setLogLevel(LogLevel.DEBUG);
}
let logLevel = process.env.PRETTIER_PLUGIN_PUG_LOG_LEVEL;
if (logLevel) {
    logLevel = logLevel.toLowerCase();
    if (Logger.isSupportedLogLevel(logLevel)) {
        exports.logger.setLogLevel(logLevel);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2xvZ2dlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxJQUFZLFFBT1g7QUFQRCxXQUFZLFFBQVE7SUFDbEIsMkJBQWUsQ0FBQTtJQUNmLHVCQUFXLENBQUE7SUFDWCx5QkFBYSxDQUFBO0lBQ2IseUJBQWEsQ0FBQTtJQUNiLDJCQUFlLENBQUE7SUFDZix1QkFBVyxDQUFBO0FBQ2IsQ0FBQyxFQVBXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBT25CO0FBU0QsTUFBYSxNQUFNO0lBUUU7SUFDVDtJQUZWLFlBQ21CLFNBQWtCLE9BQU8sRUFDbEMsUUFBa0IsUUFBUSxDQUFDLElBQUk7UUFEdEIsV0FBTSxHQUFOLE1BQU0sQ0FBbUI7UUFDbEMsVUFBSyxHQUFMLEtBQUssQ0FBMEI7SUFDdEMsQ0FBQztJQVFHLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxLQUFVO1FBQzFDLE9BQU8sQ0FDTCxPQUFPLEtBQUssS0FBSyxRQUFRO1lBQ3pCLENBQUMsS0FBSyxLQUFLLE9BQU87Z0JBQ2hCLEtBQUssS0FBSyxLQUFLO2dCQUNmLEtBQUssS0FBSyxNQUFNO2dCQUNoQixLQUFLLEtBQUssTUFBTTtnQkFDaEIsS0FBSyxLQUFLLE9BQU87Z0JBQ2pCLEtBQUssS0FBSyxLQUFLLENBQUMsQ0FDbkIsQ0FBQztJQUNKLENBQUM7SUFPTSxXQUFXLENBQUMsS0FBZTtRQUNoQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNyQixDQUFDO0lBT00sY0FBYztRQUNuQixPQUFPLElBQUksQ0FBQyxLQUFLLElBQUksUUFBUSxDQUFDLEtBQUssQ0FBQztJQUN0QyxDQUFDO0lBUU0sS0FBSyxDQUFDLE9BQWlCLEVBQUUsR0FBRyxjQUFxQjtRQUN0RCxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQVFNLEdBQUcsQ0FBQyxPQUFpQixFQUFFLEdBQUcsY0FBcUI7UUFDcEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxHQUFHLGNBQWMsQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFRTSxJQUFJLENBQUMsT0FBaUIsRUFBRSxHQUFHLGNBQXFCO1FBQ3JELElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsR0FBRyxjQUFjLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBUU0sSUFBSSxDQUFDLE9BQWlCLEVBQUUsR0FBRyxjQUFxQjtRQUNyRCxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQVFNLEtBQUssQ0FBQyxPQUFpQixFQUFFLEdBQUcsY0FBcUI7UUFDdEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxHQUFHLGNBQWMsQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFTyxPQUFPLENBQ2IsS0FBZSxFQUNmLE9BQWEsRUFDYixHQUFHLGNBQXFCO1FBRXhCLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxRQUFRLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksS0FBSyxFQUFFO1lBQ3RELElBQUksS0FBSyxLQUFLLFFBQVEsQ0FBQyxHQUFHLEVBQUU7Z0JBQzFCLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7YUFDaEQ7U0FDRjtJQUNILENBQUM7Q0FDRjtBQTdHRCx3QkE2R0M7QUFRRCxTQUFnQixZQUFZLENBQUMsU0FBa0IsT0FBTztJQUNwRCxPQUFPLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzVCLENBQUM7QUFGRCxvQ0FFQztBQUtZLFFBQUEsTUFBTSxHQUFXLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUdwRCxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxLQUFLLE1BQU0sRUFBRTtJQUNuQyxjQUFNLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztDQUNwQztBQUVELElBQUksUUFBUSxHQUF1QixPQUFPLENBQUMsR0FBRyxDQUFDLDZCQUE2QixDQUFDO0FBQzdFLElBQUksUUFBUSxFQUFFO0lBQ1osUUFBUSxHQUFHLFFBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNsQyxJQUFJLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsRUFBRTtRQUN4QyxjQUFNLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQzlCO0NBQ0YifQ==