"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PUG_BRACKET_SAME_LINE_OPTION = exports.PUG_ARROW_PARENS_OPTION = exports.PUG_SEMI_OPTION = exports.PUG_BRACKET_SPACING_OPTION = exports.PUG_USE_TABS_OPTION = exports.PUG_TAB_WIDTH_OPTION = exports.PUG_SINGLE_QUOTE_OPTION = exports.PUG_PRINT_WIDTH_OPTION = void 0;
const constants_1 = require("./constants");
exports.PUG_PRINT_WIDTH_OPTION = {
    since: '1.6.0',
    category: constants_1.CATEGORY_PUG,
    type: 'int',
    default: -1,
    description: 'The line length where Prettier will try wrap.',
    range: { start: -1, end: Infinity, step: 1 },
};
exports.PUG_SINGLE_QUOTE_OPTION = {
    since: '1.6.0',
    category: constants_1.CATEGORY_PUG,
    type: 'choice',
    default: null,
    description: '',
    choices: [
        {
            value: null,
            description: 'Use `singleQuote` value.',
        },
        {
            value: true,
            description: 'Use single quotes instead of double quotes.',
        },
        {
            value: 'true',
            description: 'Use single quotes instead of double quotes.',
        },
        {
            value: false,
            description: 'Use double quotes instead of double quotes.',
        },
    ],
};
exports.PUG_TAB_WIDTH_OPTION = {
    since: '1.6.0',
    category: constants_1.CATEGORY_PUG,
    type: 'int',
    default: -1,
    description: 'Number of spaces per indentation level.',
    range: { start: -1, end: Infinity, step: 1 },
};
exports.PUG_USE_TABS_OPTION = {
    since: '1.6.0',
    category: constants_1.CATEGORY_PUG,
    type: 'choice',
    default: null,
    description: '',
    choices: [
        {
            value: null,
            description: 'Use `useTabs` value.',
        },
        {
            value: true,
            description: 'Indent with tabs instead of spaces.',
        },
        {
            value: 'true',
            description: 'Indent with tabs instead of spaces.',
        },
        {
            value: false,
            description: 'Indent with spaces instead of tabs.',
        },
    ],
};
exports.PUG_BRACKET_SPACING_OPTION = {
    since: '1.6.0',
    category: constants_1.CATEGORY_PUG,
    type: 'choice',
    default: null,
    description: '',
    choices: [
        {
            value: null,
            description: 'Use `bracketSpacing` value.',
        },
        {
            value: true,
            description: 'Print spaces between brackets.',
        },
        {
            value: 'true',
            description: 'Print spaces between brackets.',
        },
        {
            value: false,
            description: 'Do not print spaces between brackets.',
        },
    ],
};
exports.PUG_SEMI_OPTION = {
    since: '1.6.0',
    category: constants_1.CATEGORY_PUG,
    type: 'choice',
    default: null,
    description: '',
    choices: [
        {
            value: null,
            description: 'Use `bracketSpacing` value.',
        },
        {
            value: true,
            description: 'Print semicolons.',
        },
        {
            value: 'true',
            description: 'Print semicolons.',
        },
        {
            value: false,
            description: 'Do not print semicolons, except at the beginning of lines which may need them.',
        },
    ],
};
exports.PUG_ARROW_PARENS_OPTION = {
    since: '1.7.0',
    category: constants_1.CATEGORY_PUG,
    type: 'choice',
    default: null,
    description: 'Include parentheses around a sole arrow function parameter.',
    choices: [
        {
            value: null,
            description: 'Use `arrowParens` value.',
        },
        {
            value: 'always',
            description: 'Always add parens. Example: `(x) => x`',
        },
        {
            value: 'avoid',
            description: 'Omit parens when possible. Example: `x => x`',
        },
    ],
};
exports.PUG_BRACKET_SAME_LINE_OPTION = {
    since: '1.17.0',
    category: constants_1.CATEGORY_PUG,
    type: 'choice',
    default: null,
    description: 'Determines position of closing bracket which wraps attributes.',
    choices: [
        {
            value: null,
            description: 'Use `bracketSameLine` value.',
        },
        {
            value: true,
            description: `
			Closing bracket remains with last attribute's line.
			Example:
			input(
				type='text',
				value='my_value',
				name='my_name',
				alt='my_alt',
				autocomplete='on')
			`,
        },
        {
            value: 'true',
            description: `
			Closing bracket remains with last attribute's line.
			Example:
			input(
				type='text',
				value='my_value',
				name='my_name',
				alt='my_alt',
				autocomplete='on')
			`,
        },
        {
            value: false,
            description: `
			Closing bracket ends with a new line.
			Example:
			input(
				type='text',
				value='my_value',
				name='my_name',
				alt='my_alt',
				autocomplete='on'
			)
			`,
        },
    ],
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL29wdGlvbnMvY29tbW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLDJDQUEyQztBQUc5QixRQUFBLHNCQUFzQixHQUFxQjtJQUN0RCxLQUFLLEVBQUUsT0FBTztJQUNkLFFBQVEsRUFBRSx3QkFBWTtJQUN0QixJQUFJLEVBQUUsS0FBSztJQUNYLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFDWCxXQUFXLEVBQUUsK0NBQStDO0lBQzVELEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUU7Q0FDN0MsQ0FBQztBQUdXLFFBQUEsdUJBQXVCLEdBRWhDO0lBQ0YsS0FBSyxFQUFFLE9BQU87SUFDZCxRQUFRLEVBQUUsd0JBQVk7SUFDdEIsSUFBSSxFQUFFLFFBQVE7SUFDZCxPQUFPLEVBQUUsSUFBSTtJQUNiLFdBQVcsRUFBRSxFQUFFO0lBQ2YsT0FBTyxFQUFFO1FBQ1A7WUFDRSxLQUFLLEVBQUUsSUFBSTtZQUNYLFdBQVcsRUFBRSwwQkFBMEI7U0FDeEM7UUFDRDtZQUNFLEtBQUssRUFBRSxJQUFJO1lBQ1gsV0FBVyxFQUFFLDZDQUE2QztTQUMzRDtRQUNEO1lBRUUsS0FBSyxFQUFFLE1BQU07WUFDYixXQUFXLEVBQUUsNkNBQTZDO1NBQzNEO1FBQ0Q7WUFDRSxLQUFLLEVBQUUsS0FBSztZQUNaLFdBQVcsRUFBRSw2Q0FBNkM7U0FDM0Q7S0FDRjtDQUNGLENBQUM7QUFHVyxRQUFBLG9CQUFvQixHQUFxQjtJQUNwRCxLQUFLLEVBQUUsT0FBTztJQUNkLFFBQVEsRUFBRSx3QkFBWTtJQUN0QixJQUFJLEVBQUUsS0FBSztJQUNYLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFDWCxXQUFXLEVBQUUseUNBQXlDO0lBQ3RELEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMs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